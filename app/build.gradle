apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.devtools.ksp'

android {
    compileSdk 35
    namespace "zzh.lifeplayer.music"
    buildToolsVersion="35.0.0"
    defaultConfig {
        minSdk 30
        targetSdk 35
        vectorDrawables.useSupportLibrary = true
        applicationId namespace
        versionCode 20250525
        versionName '11.0.5.0'

    }
    
    signingConfigs {
        release {
            storeFile file("zzh-source-apps.jks") // 密钥库的路径
            storePassword "114514.b"             // 密钥库的密码
            keyAlias "zzhlife"                  // 密钥别名
            keyPassword "114514.b"             // 密钥的密码
            v1SigningEnabled true
            v2SigningEnabled true
            enableV3Signing true
            enableV4Signing true
        }
        debug {
        
            storeFile file("zzh-source-apps.jks") // 密钥库的路径
            storePassword "114514.b"             // 密钥库的密码
            keyAlias "zzhlife"                  // 密钥别名
            keyPassword "114514.b"             // 密钥的密码
            v1SigningEnabled true
            v2SigningEnabled true
            enableV3Signing true

        }
    }
    
    buildTypes {
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix ' DEBUG'
        }
    }
    flavorDimensions = ["version"]
    productFlavors {
        normal {
            dimension "version"
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
      //compose true
    }
    
    /*composeOptions {
       kotlinCompilerExtensionVersion = "1.5.13"
    }*/
    
    packagingOptions {
        resources {
            excludes += ['META-INF/LICENSE', 'META-INF/NOTICE', 'META-INF/java.properties']
        }
    }
    lint {
        abortOnError true
        warning 'ImpliedQuantity', 'Instantiatable', 'MissingQuantity', 'MissingTranslation', 'StringFormatInvalid'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17     
    }    
    kotlinOptions {
        jvmTarget = "17"
    }
    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }
}

def getProperties(String fileName) {
    Properties properties = new Properties()
    def file = rootProject.file(fileName)
    if (file.exists()) {
        file.withInputStream { stream -> properties.load(stream) }
    } else {
        properties = null
    }
    return properties
}

static def getProperty(Properties properties, String name) {
    return properties?.getProperty(name) ?: "$name missing"
}

dependencies {
    implementation project(':appthemehelper')
    implementation libs.gridLayout

    implementation libs.androidx.appcompat
    implementation libs.androidx.annotation
    implementation libs.androidx.constraintLayout
    implementation libs.androidx.recyclerview
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.core.ktx
    implementation libs.androidx.palette.ktx
    
    implementation libs.androidx.mediarouter
    //Cast Dependencies
    // normalImplementation libs.google.play.services.cast.framework
    //WebServer by NanoHttpd
    normalImplementation libs.nanohttpd

    implementation libs.androidx.navigation.runtime.ktx
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    implementation libs.androidx.room.runtime
    implementation libs.androidx.room.ktx
    ksp libs.androidx.room.compiler

    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.common.java8

    implementation libs.androidx.core.splashscreen

    normalImplementation libs.google.feature.delivery
    
    implementation libs.android.material

    implementation libs.retrofit
    implementation libs.retrofit.converter.gson
    implementation libs.okhttp3.logging.interceptor

    implementation libs.afollestad.material.dialogs.core
    implementation libs.afollestad.material.dialogs.input
    implementation libs.afollestad.material.dialogs.color
    implementation libs.afollestad.material.cab

    implementation libs.kotlinx.coroutines.android

    implementation libs.koin.core
    implementation libs.koin.android

    implementation libs.glide
    ksp libs.glide.ksp
    implementation libs.glide.okhttp3.integration

    implementation libs.advrecyclerview

    implementation libs.fadingedgelayout

    implementation libs.keyboardvisibilityevent
    implementation libs.jetradarmobile.android.snowfall

    implementation libs.chrisbanes.insetter

    implementation libs.org.eclipse.egit.github.core
    implementation libs.jaudiotagger
    normalImplementation libs.android.lab.library
    implementation libs.slidableactivity
    implementation libs.material.intro
    implementation libs.dhaval2404.imagepicker
    implementation libs.fastscroll.library
    implementation libs.customactivityoncrash
    implementation libs.tankery.circularSeekBar
    implementation libs.androidx.exoplayer
    
    /*
    implementation(platform(libs.androidx.compose.bom))
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.material)
    implementation(libs.androidx.compose.ui.tooling.preview)
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.lifecycle.viewmodel.compose)
    implementation(libs.androidx.navigation.compose)   
    debugImplementation(libs.androidx.compose.ui.tooling)
    */
    
}
